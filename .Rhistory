submit()
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status="passed")
passed <- mutate(passed, status="passed")
failed <- failed %>% mutate( status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
submit()
submit()
install_from_swirl("R Programming")
quit()
library(swirl)
swirl()
bye()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package==lubridate)
help(package=lubridate)
today()
Sys.setlocale("LC_TIME", "en_US.UTF-8")
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label =  TRUE)
now()
this_moment <-now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
nyc <- now(tzone= "America/New_York")
nyc
depart <- nyc + day(2)
depart <- nyc + days(2)
depart
depart < update(depart, hours = "17", minutes ="34")
depart < update(depart, hours = 17, minutes =34)
depart <- update(depart, hours = 17, minutes =34)
depart
arrive <- depart + hours(15)+ minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tzone="Singapore")
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
interval(arrive, last_time)
?interval
how_long <- interval(arrive, last_time)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(swirl)
swirl()
library(swirl)
swirl()
colors()
sample(colors(),10)
pal <-colorRamp(c("red","blue"))
pal(0)
pal(1)
library(swirl)
swirl()
pal(seq(0,1, len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xCC CC0033
0xCC0033
0xCC
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue","green"), alpha=0.5)
p3(5)
plot(x,y,pch=19,rgb(0,0.5,0.5))
plot(x,y, pch=19, rgb(0,.5,.5))
plot(x,y, pch=19, col=rgb(0,.5,.5))
plot(x,y, pch=19, col=rgb(0,.5,.5,0.3))
cols <- brewer.pal(3,"BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
str(mpg)
qplot(displ, hwy, data = mpg)
plot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
qplot()
quit()
library(swirl)
swirl()
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg, color=drv)
qplot(displ,hwy,data=mpg, color=drv,geom=c("point","smooth"))
qplot(hwy,data=mpg, color=drv
)
qplot(y=hwy,data=mpg, color=drv)
myhigh
qplot(drv,hwy, data=mpg, geom="boxplot")
qplot(drv,hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facet=.~drv)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(hwy, data=mpg, facets = drv~., binwidth=2)
quit()
library(siwrl)
library(swirl)
swirl()
qplot(displ, hwy, data=mpg, geom=c("point","smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(,~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(size=4, alpha=1/2, aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2, alpha=1/2)+geom_smooth(size=4,linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy, type="l", ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g _geom_line()
g +geom_line()
g +geom_line()+ylim(-3,3)
g +geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year))
)
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm",size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm",size=2, se=FALSE,color="black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm",size=2, se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage", title="Swirl Rules!")
quit()
rbinom(1,size=1,prob = 0.5)
rbinom(1,size=1,prob = 0.5)
rbinom(1,size=1,prob = 0.5)
rbinom(1,size=1,prob = 0.5)
rbinom(1,size=1,prob = 0.5)
rbinom(1,size=1,prob = 0.5)
rep(c(0,3), each=5)
library(swirl)
swirl()
dim(pm0)
head(pm0)
quit()
mtcars
mtcars$carname <-rownames(mtcars)
carMelt <- melt(mtcars, id=c('carname',"gear",'cyl'), measure.vars=c("mpg","hp"))
library(reshape2)
carMelt <- melt(mtcars, id=c('carname',"gear",'cyl'), measure.vars=c("mpg","hp"))
carMelt
library(swirl)
swirl()
cnames
cnames <- strsplit(cnames, split = "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
quit()
library(swirl)
swirl()
quit()
library(swirl)
swirl
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <-make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
quit()
quit()
library(swirl)
swirl()
str(x1999)
str(x0)
mean(is.na(x0))
names(pm1) <-make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
head(pm1)
names(pm1) <-make.names(cnames[[1]][wcol])
head(pm1)
head(pm0)
names(pm1) <- make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
cnames[[1]]
cnames <- strsplit(cnames, split = "|", fixed = TRUE)
cnames[[1]]
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
names(pm1) <- make.names(cnames[[1]][wcol])
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],months)
hist(dates[negative],month)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
quit()
library(swirl)
swirl()
cnt0 <- subset(pm0, State.code==36 & both %in% country.site)
cnt0 <- with(pm0, subset(pm0, State.code==36 & both %in% country.site))
View(pm0)
cnt0 <- subset(pm0, State.Code==36 & both %in% country.site)
cnt0 <- subset(pm0, State.Code==36 & both %in% county.site)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
quit()
library(swirl)
swirl()
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
swirl()
View(cnt0)
pm0sub <- subset(cnt0,County.Code == 63 * Site.ID==2008 )
pm0sub <- subset(cnt0,County.Code == 63 & Site.ID==2008 )
pm1sub <- subset(cnt1,County.Code == 63 & Site.ID==2008 )
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=C(4,4,2,1))
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(date0,x0sub, pch=20)
plot(dates0,x0sub, pch=20)
abline(h=median(x0sub,na.rm=TRUE), lwd=2)
plot(dates1,x1sub, pch=20)
abline(h=median(x1sub,na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm.rm=TRUE)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(states=names(mn0),mean=mn0)
d0 <- data.frame(state = names(mn0), mean=mn0)
d1 <- data.frame(state = names(mn1), mean=mn1)
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim= c(.5,2.5)))
with(mrg, plot(rep(2,52), mrg[,3]))
with(mrg, points(rep(2,52), mrg[,3]))
with(mrg, plot(rep(1,52), mrg[,2], xlim= c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,52], rep(2,52), mrg[,3])
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y, ]
quit()
install.packages("kernlab")
library(kernlab)
data(spam)
str(spam[,1:5])
# Perform the subsampling
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1, ]
testSpam = spam[trainIndicator == 0, ]
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam[, 1:4] + 1))
hCluster = hclust(dist(t(trainSpam[, 1:57])))
plot(hCluster)
hClusterUpdated = hclust(dist(t(log10(trainSpam[, 1:55] + 1))))
plot(hClusterUpdated)
trainSpam$numType = as.numeric(trainSpam$type) - 1
costFunction = function(x, y) sum(x != (y > 0.5))
cvError = rep(NA, 55)
library(boot)
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
names(trainSpam)[which.min(cvError)]
predictionModel = glm(numType ~ charDollar, family = "binomial", data = trainSpam)
predictionTest = predict(predictionModel, testSpam)
predictedSpam = rep("nonspam", dim(testSpam)[1])
predictedSpam[predictionModel$fitted > 0.5] = "spam"
table(predictedSpam, testSpam$type)
(61 + 458)/(1346 + 458 + 61 + 449)
library(lubridate)
wday("1999-03-20")
setwd("C:/17년역량개발/5.5 Reproducible research/week2/RepData_PeerAssessment1")
activity <- read.csv("./activity.csv")
activity$date <- as.Date(as.character(activity$date))
daily_step <-aggregate(activity$steps, by=list(activity$date), FUN=sum)
names(daily_step) <- c("date","steps")
head(daily_step)
library(ggplot2)
g <- ggplot(daily_step, aes(steps)) + geom_histogram(bins = 30, na.rm = TRUE)
print (g)
interval_step <-aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line()
print (g)
sum(!complete.cases(activity))
missing_value <- mean(activity$steps, na.rm = TRUE)
new_activity <- activity
new_activity[!complete.cases(new_activity),]$steps <- missing_value
daily_step <-aggregate(new_activity$steps, by=list(new_activity$date), FUN=sum)
names(daily_step) <- c("date","steps")
ggplot(daily_step, aes(steps)) + geom_histogram(bins = 30, na.rm = TRUE)
mean(daily_step$steps, na.rm = TRUE)
median(daily_step$steps, na.rm = TRUE)
activity <- read.csv("./activity.csv")
activity$date <- as.Date(as.character(activity$date))
daily_step <-aggregate(activity$steps, by=list(activity$date), FUN=sum)
names(daily_step) <- c("date","steps")
head(daily_step)
library(ggplot2)
g <- ggplot(daily_step, aes(steps)) + geom_histogram(bins = 30, na.rm = TRUE)
print (g)
mean(daily_step$steps, na.rm = TRUE)
median(daily_step$steps, na.rm = TRUE)
interval_step <-aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line()
print (g)
max(interval_step$steps)
sum(!complete.cases(activity))
missing_value <- mean(activity$steps, na.rm = TRUE)
new_activity <- activity
new_activity[!complete.cases(new_activity),]$steps <- missing_value
if(wday(activity$date) %in% c(2:6)) { "weekday" } else { "weekend" }
function (x) {if(wday(activity$date) %in% c(2:6)) { "weekday" } else { "weekend" }}
function (x) {if(wday(x) %in% c(2:6)) { "weekday" } else { "weekend" }}
aa <- function (x) {if(wday(x) %in% c(2:6)) { "weekday" } else { "weekend" }}
aa(activity$date)
lapply(activity$date, aa)
sapply(activity$date, aa)
b<-sapply(activity$date, aa)
str(b)
table(b)
aa <- function (x) {if(wday(x) %in% c(2:6)) "weekday" else "weekend" }
wfind <- function (x) {if(wday(x) %in% c(2:6)) "weekday" else "weekend" }
activity$wday <- factor(sapply(activity$date, wfind})
activity$wday <- factor(sapply(activity$date, wfind)
)
table(activity$wday)
head(activity)
wfind <- function (x) {if(wday(x) %in% c(2:6)) "weekday" else "weekend" }
activity$wday <- factor(sapply(activity$date, wfind))
str(activity)
interval_step <-aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line()
g <- g+ facet_grid(wday~.)
print (g)
interval_step <-aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line()
print (g)
interval_step <-aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line()
print (g)
activity <- read.csv("./activity.csv")
activity$date <- as.Date(as.character(activity$date))
daily_step <-aggregate(activity$steps, by=list(activity$date), FUN=sum)
names(daily_step) <- c("date","steps")
head(daily_step)
library(ggplot2)
g <- ggplot(daily_step, aes(steps)) + geom_histogram(bins = 30, na.rm = TRUE)
print (g)
mean(daily_step$steps, na.rm = TRUE)
median(daily_step$steps, na.rm = TRUE)
interval_step <-aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line()
print (g)
max(interval_step$steps)
sum(!complete.cases(activity))
missing_value <- mean(activity$steps, na.rm = TRUE)
new_activity <- activity
new_activity[!complete.cases(new_activity),]$steps <- missing_value
daily_step <-aggregate(new_activity$steps, by=list(new_activity$date), FUN=sum)
names(daily_step) <- c("date","steps")
ggplot(daily_step, aes(steps)) + geom_histogram(bins = 30, na.rm = TRUE)
mean(daily_step$steps, na.rm = TRUE)
median(daily_step$steps, na.rm = TRUE)
wfind <- function (x) {if(wday(x) %in% c(2:6)) "weekday" else "weekend" }
activity$wday <- factor(sapply(activity$date, wfind))
str(activity)
interval_step <-aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line()
print (g)
View(interval_step)
View(interval_step)
interval_step <-aggregate(activity$steps, by=list(activity$interval,activity$way), FUN=mean, na.rm= TRUE)
interval_step <-aggregate(activity$steps, by=list(activity$interval,activity$wday), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line()
print (g)
View(interval_step)
View(interval_step)
interval_step <-aggregate(activity$steps, by=list(activity$interval,activity$wday), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line()
print (g)
interval_step <-aggregate(activity$steps, by=list(activity$interval,activity$wday), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","wday","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line()
print (g)
interval_step <-aggregate(activity$steps, by=list(activity$interval,activity$wday), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","wday","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line()
print (g)
interval_step <-aggregate(activity$steps, by=list(activity$interval,activity$wday), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","wday","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line() + facet_grid(wday~.)
print (g)
interval_step <-aggregate(activity$steps, by=list(activity$interval,activity$wday), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","wday","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line() + facet_grid(wday~.)
g <- g + theme_bw(base_family = "Times”)
print (g)
interval_step <-aggregate(activity$steps, by=list(activity$interval,activity$wday), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","wday","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line() + facet_grid(wday~.)
g <- g + theme_bw(base_family = "Times")
print (g)
interval_step <-aggregate(activity$steps, by=list(activity$interval,activity$wday), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","wday","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line() + facet_grid(wday~.)
g <- g + theme_bw(base_family = "Times")
print (g)
interval_step <-aggregate(activity$steps, by=list(activity$interval,activity$wday), FUN=mean, na.rm= TRUE)
names(interval_step) <- c("interval","wday","steps")
g <- ggplot(interval_step, aes(interval,steps)) + geom_line() + facet_grid(wday~.)
print (g)
